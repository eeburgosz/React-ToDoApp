{"version":3,"sources":["reportWebVitals.js","components/08-useReducer/toDoReducer.js","components/08-useReducer/ToDoListItems.js","components/08-useReducer/ToDoList.js","components/08-useReducer/ToDoAdd.js","hooks/useForm.js","components/08-useReducer/ToDoApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","toDoReducer","state","action","type","payload","filter","toDo","id","map","done","ToDoListItems","i","handleDelete","handleToggle","className","onClick","desc","ToDoList","toDos","ToDoAdd","handleAddToDo","initialState","useState","values","setValues","target","name","value","useForm","description","handlerInputChange","reset","onSubmit","e","preventDefault","trim","length","newToDo","Date","getTime","onChange","placeholder","autoComplete","init","JSON","parse","localStorage","getItem","ToDoApp","useReducer","dispatch","useEffect","setItem","stringify","toDoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45ef191f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\n\r\nexport const toDoReducer = (state= [], action) => {\r\n    \r\n    switch (action.type) {\r\n        case 'add':\r\n            return [...state, action.payload];\r\n        \r\n        case 'delete':\r\n            return state.filter(toDo=> toDo.id !== action.payload);\r\n           \r\n        case 'toggle-old':\r\n            return state.map(toDo=> {\r\n                if (toDo.id === action.payload){\r\n                    return {\r\n                        ...toDo,\r\n                        done: !toDo.done\r\n                    }\r\n                }else{\r\n                    return toDo;\r\n                }\r\n            })\r\n            \r\n        case 'toggle':\r\n            return state.map(toDo=> (toDo.id === action.payload) ? {...toDo, done: !toDo.done} : toDo)\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const ToDoListItems = ({toDo, i, handleDelete, handleToggle}) => {\r\n    return (\r\n        <li key= {toDo.id}\r\n            className= \"list-group-item\" >\r\n            <p  onClick= {()=> handleToggle(toDo.id)}\r\n                className= {`${toDo.done && 'complete'}`}> {i+1}. {toDo.desc}</p>\r\n            <button onClick= {()=> handleDelete(toDo.id)}\r\n                    className= \"btn btn-danger\">Borrar</button>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ToDoListItems } from './ToDoListItems'\r\n\r\n\r\n\r\nexport const ToDoList = ({toDos, handleDelete, handleToggle}) => {\r\n \r\n    return (\r\n        <ul className=\"list-group list-group-flush\">\r\n            {\r\n                toDos.map((toDo, i) => (\r\n                    <ToDoListItems key= {toDo.id}\r\n                                   toDo= {toDo}\r\n                                   i= {i}\r\n                                   handleDelete= {handleDelete}\r\n                                   handleToggle= {handleToggle} \r\n                    />                    \r\n                ))\r\n            }\r\n        </ul> \r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const ToDoAdd = ({ handleAddToDo }) => {\r\n\r\n    const [{description}, handlerInputChange, reset]= useForm({\r\n\r\n        description: ''\r\n\r\n    });\r\n\r\n    const handleSubmit= (e)=> {\r\n\r\n        e.preventDefault();\r\n\r\n        if(description.trim().length <= 0){\r\n            return;\r\n        };\r\n        const newToDo= {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n         };\r\n        handleAddToDo(newToDo);\r\n        reset();\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n          <h4>Agregar ToDo</h4>\r\n                <hr/>\r\n                <form onSubmit= {handleSubmit}>\r\n                    <input onChange= {handlerInputChange}\r\n                            value= {description}\r\n                            type= \"text\"\r\n                            name= \"description\"\r\n                            placeholder= \"Aprender...\"\r\n                            autoComplete= \"off\"\r\n                            className= \"form-control\"></input>\r\n                    <button type= \"submit\"\r\n                            className= \"btn btn-outline-primary mt-1 btn-block\">Agregar</button>\r\n                </form>  \r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\n\r\nexport const useForm = (initialState= {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n    const handlerInputChange= ({target})=> {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n\r\n    const reset= ()=> {\r\n        setValues(initialState)\r\n    };\r\n\r\n    return [values, handlerInputChange, reset];\r\n}\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport { toDoReducer } from './toDoReducer';\r\n\r\nimport { ToDoList } from './ToDoList';\r\nimport { ToDoAdd } from './ToDoAdd';\r\n\r\nimport './styles.css';\r\n\r\nconst init= ()=> {\r\n    return JSON.parse(localStorage.getItem('toDos')) || [];\r\n};\r\n\r\nexport const ToDoApp = () => {\r\n\r\n    const [toDos, dispatch] = useReducer(toDoReducer, [], init);\r\n\r\n    useEffect( ()=> {\r\n        localStorage.setItem('toDos', JSON.stringify(toDos));\r\n    }, [toDos]);\r\n\r\n    const handleDelete= (toDoId)=> {\r\n        dispatch({\r\n            type: 'delete',\r\n            payload: toDoId\r\n        });\r\n    };\r\n\r\n    const handleToggle= (toDoId)=> {\r\n        dispatch({\r\n            type: 'toggle',\r\n            payload: toDoId\r\n        });\r\n    };\r\n\r\n    const handleAddToDo= (newToDo)=> {\r\n        dispatch({\r\n            type: 'add',\r\n            payload: newToDo\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>ToDo App ({toDos.length}) </h1>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-7\">\r\n                    <ToDoList toDos= {toDos}\r\n                              handleDelete= {handleDelete}\r\n                              handleToggle= {handleToggle} />   \r\n                </div>\r\n                <div className=\"col-5\">\r\n                    <ToDoAdd handleAddToDo= {handleAddToDo} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\n//import { CounterApp } from './components/01-useState/CounterApp';\n//import { CounterWithCustomHook } from './components/01-useState/CounterWithCustomHook';\n//import { SimpleForm } from './components/02-useEffect/SimpleForm';\n//import { FormWithCustomHook } from './components/02-useEffect/FormWithCustomHook';\n//import { MultipleCustomHooks } from './components/03-examples/MultipleCustomHooks';\n//import { FocusScreen } from './components/04-useRef/FocusScreen';\n//import { RealExampleRef } from './components/04-useRef/RealExampleRef';\n//import { Layout } from './components/05-useLayoutEffect/Layout';\n//import { Memorize } from './components/06-Memos/Memorize';\n//import { MemoHook } from './components/06-Memos/MemoHook';\n//import { CallbackHook } from './components/06-Memos/CallbackHook';\nimport { ToDoApp } from './components/08-useReducer/ToDoApp';\n\nimport './index.css';\n\nReactDOM.render(\n  \n    <ToDoApp />,\n \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n/* import './components/08-useReducer/intro-reducer'; */"],"sourceRoot":""}